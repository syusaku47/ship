{"version":3,"sources":["routes/routing-pass.tsx","components/sp/pages/test-detail/test-detail.sp.tsx","components/ui/input-field/input-field.tsx","components/ui/checkbox/checkbox.tsx","components/ui/button/button.tsx","utilities/log-decorator.ts","service/connection.ts","service/api-base.ts","redux/auth/api/login/login.ts","redux/auth/api/login/index.ts","redux/auth/api/logout/logout.ts","redux/auth/api/logout/index.ts","redux/auth/auth.action.ts","utilities/line-feed-conversion.tsx","components/sp/pages/login/login.sp.tsx","redux/system/system.action.ts","components/ui/map/dummy-map/marker/customer-marker/customer-marker.tsx","asset/images/customer_ob.svg","asset/images/customer_uncontracted.svg","components/ui/map/dummy-map/dummy-customer-data.tsx","components/ui/map/map-base.tsx","asset/images/current_location.svg","components/ui/map/dummy-map/marker/human-marker/human-marker.tsx","components/ui/map/dummy-map/dummy-map.tsx","components/ui/card/customer-card/customer-card.tsx","components/sp/layout/body/list/customer-list/customer-list.sp.tsx","redux/dialog/dialog.action.ts","components/sp/layout/header/header.sp.tsx","components/sp/pages/base.page.sp.tsx","components/sp/pages/customer/customer.sp.tsx","components/sp/pages/customer-detail/customer-detail.sp.tsx","components/sp/pages/proposition/proposition.sp.tsx","components/sp/pages/proposition-detail/proposition-detail.sp.tsx","components/sp/pages/estimate/estimate.sp.tsx","components/sp/pages/estimate-detail/estimate-detail.sp.tsx","components/sp/pages/order/order.sp.tsx","components/sp/pages/maintenance/maintenance.sp.tsx","components/sp/pages/maintenance-detail/maintenance-detail.sp.tsx","components/sp/pages/file/file.sp.tsx","components/sp/pages/support-history/support-history.sp.tsx","components/sp/pages/password/forget-password/forget-password.sp.tsx","redux/test/api/str/api-test-str.ts","service/api.collection.ts","redux/test/api/str/get.ts","redux/test/api/str/post.ts","redux/test/api/str/delete.ts","redux/test/api/str/index.ts","redux/test/test.action.ts","components/sp/pages/test-page/test-page.sp.tsx","routes/routes.tsx","components/ui/loading/loading.tsx","components/dialogs/dialog.tsx","App.tsx","reportWebVitals.ts","redux/test/test.reducer.ts","redux/system/system.reducer.ts","redux/dialog/dialog.reducer.ts","redux/auth/auth.saga.ts","redux/dialog/dialog.saga.ts","redux/system/system.saga.ts","redux/test/test.saga.ts","redux/root.saga.ts","redux/root.reducer.ts","redux/store.ts","index.tsx"],"names":["RoutingPath","TestDetailSP","id","useParams","dispatch","useDispatch","handleClickBack","useCallback","push","onClick","InputField","props","label","className","isSP","type","placeholder","onChange","disabled","onEnterKeyPress","value","defaultClass","onKeyPress","e","key","Input","defaultProps","Checkbox","labelSide","htmlFor","name","Button","defaultProp","as","colorSet","black","red","green","yellow","blue","white","Connection","apiBase","fetch","createUrl","createRequestInit","then","res","response","catch","error","api","status","contents","json","log","blob","contentTypeArr","headers","get","replace","split","nameItem","find","v","indexOf","window","console","length","file","File","parsedBlob","parse","filename","disposition","matches","exec","text","a","parsedText","data","color","title","httpMethod","url","statusColor","groupCollapsed","group","header","param","groupEnd","ApiBase","sendParam","host","isBinary","this","run","hostName","createQueryParam","Headers","keys","Object","values","forEach","i","append","String","JSON","stringify","formData","FormData","undefined","requestInit","createHeader","method","body","createBody","queryParam","ApiLogin","apiLogin","actionCreatorFactory","ActionCreator","ApiLogout","apiLogout","AuthActions","login","logout","ConvertLineFeed","map","LoginSP","useState","setId","pass","setPass","remember","setRemember","errorMessage","setErrorMessage","handleClickLogin","onError","str","ErrorMessageEle","target","to","SystemActions","isLoading","setIsLoading","CustomerMarker","position","callback","icon","domEvent","preventDefault","stopPropagation","scaledSize","globalThis","google","maps","Size","dummyCustomerData","furigana","postal","address","first","second","tel","email","lineId","facebookId","salesOffice","salesStaff","rank","img","dummyCustomerMarkers","lat","lng","customer","customerOb","customerUncontracted","MapBase","center","children","centerPosition","googleMapsApiKey","options","zoomControlOptions","streetViewControlOptions","mapContainerStyle","width","height","clickableIcons","zoom","HumanMarker","currentLocation","testCenter","CustomerInfoWindow","callBack","detailFlag","setDetailFlag","handleClickArrow","handleClickTel","document","createElement","href","appendChild","click","remove","handleClickSupportHistory","handleClickLine","rel","DummyMap","setCustomer","isInfo","setIsInfo","list","filter","onLoad","onTilesLoaded","CustomerCard","customerData","baseClassName","defaultClassName","CustomerListSP","customerList","DialogActions","pushMessage","pop","clear","HeaderSP","userInfo","headerRef","menuHeaderEle","useRef","isMenuOpened","setIsMenuOpened","menuHeaderHeight","setMenuHeaderHeight","handleClickMenu","routingPath","handleClickLogout","message","btnProps","isCancel","useEffect","current","getBoundingClientRect","ref","style","top","employeeCD","storeName","userName","userAltName","userFurigana","jobPost","BasePageSP","headerEle","headerHeight","setHeaderHeight","CustomerSP","showType","setShowType","customerShowType","setCustomerShowType","footerHeight","setFooterHeight","footerEle","CustomerDetailSP","PropositionSP","PropositionDetailSP","EstimateSP","EstimateDetailSP","OrderSP","MaintenanceSP","MaintenanceDetailSP","FileSP","SupportHistorySP","ForgetPasswordSP","ApiTestStr","lodash","cloneDeep","ApiTestStrGet","ApiTestStrPost","ApiTestStrDelete","apiStr","post","delete","TestActions","testAlert","setTestStr","TestPageSP","handleClick","click2BasePage","handleClickReduxTestAlert","handleClickReduxTestApi","action","Routes","exact","path","component","Loading","useSelector","state","system","Dimmer","active","Loader","size","inverted","content","BaseDialog","element","messageType","Modal","open","Header","Content","messages","Dialog","dialogs","dialog","bodyEle","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TestReducer","reducerWithInitialState","testStr","case","payload","SystemReducer","DialogReducer","arr","splice","default","tryApiLogin","tryApiLogout","AuthSaga","put","request","result","Error","takeEvery","tryPushMessage","DialogSaga","allClear","Store","tryLoading","SystemSaga","delay","tryTestAlert","tryStrApiGet","tryStrApiPost","tryStrApiDelete","TestSaga","alert","args","history","RootSaga","root","all","fork","createHashHistory","sagaMiddleWare","createSagaMiddleware","persistedReducer","persistReducer","whitelist","storage","debug","combineReducers","router","connectRouter","test","obj","createLogger","collapsed","diff","duration","preloadState","middleware","routerMiddleware","middlewareEnhancer","applyMiddleware","store","createStore","persist","persistStore","ConfigureStore","render","getElementById"],"mappings":"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","file":"static/js/main.92ddaf02.chunk.js","sourcesContent":["export const RoutingPath = {\n  /** テストページ */\n  testPage: '/test-page',\n  testDetail: '/test-detail',\n\n  /** ログイン */\n  login: '/login',\n  /** パスワード再発行画面 */\n  forgetPassword: '/forget-password',\n  /** パスワード再設定用メール送信 */\n  sendPassword: '/send-password',\n  /** 顧客 */\n  customer: '/customer',\n  /** 顧客詳細 */\n  customerDetail: '/customer/detail',\n  /** 案件 */\n  proposition: '/proposition',\n  /** 案件詳細 */\n  propositionDetail: '/proposition/detail',\n  /** 見積 */\n  estimate: '/estimate',\n  /** 見積詳細 */\n  estimateDetail: '/estimate/detail',\n  /** 受注 */\n  order: '/order',\n  /** メンテナンス */\n  maintenance: '/maintenance',\n  /** メンテナンス詳細 */\n  maintenanceDetail: '/maintenance/detail',\n  /** ファイル */\n  file: '/file',\n  /** 対応履歴 */\n  supportHistory: '/support-history',\n  /** CSV出力 */\n  exportCsv: '/export-csv',\n  /** マスタ管理 */\n  master: '/master',\n};\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './test-detail.sp.scss';\nimport { push } from 'connected-react-router';\n\nimport { useParams } from 'react-router-dom';\nimport { RoutingPath } from '../../../../routes/routing-pass';\n\nexport const TestDetailSP = () => {\n  const { id } = useParams<{ id: string; }>();\n  const dispatch = useDispatch();\n\n  const handleClickBack = useCallback(() => {\n    dispatch(push(RoutingPath.testPage));\n  }, []);\n\n  return (\n    <div>\n      <h2>TestDetail</h2>\n      <div>\n        id :  {id}\n      </div>\n      <div>\n        <button onClick={handleClickBack}>戻る</button>\n      </div>\n    </div>\n  );\n};\n","import './input-field.scss';\nimport { Input, InputProps } from 'semantic-ui-react';\n\ntype Props = {\n  isSP?: true;\n  onEnterKeyPress?: () => void;\n} &InputProps;\n\nexport const InputField = (props: Props) => {\n  const {\n    label, className, isSP, type, placeholder, onChange, disabled, onEnterKeyPress, value,\n  } = props;\n\n  const defaultClass = isSP ? 'input-field-sp' : 'input-field';\n\n  return (\n    <div className={`${defaultClass} ${className || ''}`} onKeyPress={(e) => e.key === 'Enter' && onEnterKeyPress && onEnterKeyPress()}>\n      <span className={`${defaultClass}__label`}>{label}</span>\n      <Input\n        value={value}\n        className={`${defaultClass}__field`}\n        type={type}\n        placeholder={placeholder}\n        onChange={onChange}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nInputField.defaultProps = { isSP: true };\n","import './checkbox.scss';\nimport React from 'react';\n// import { Checkbox as SCheckbox } from 'semantic-ui-react';\n\ntype Props = {\n    label: string,\n    className?: string,\n    labelSide?: 'right' | 'left'\n} & React.InputHTMLAttributes<HTMLInputElement>;\n\nexport const Checkbox = (props: Props) => {\n  const {\n    label, className, labelSide,\n  } = props;\n\n  return (\n    <div className={`checkbox ${className || ''}`}>\n      {labelSide === 'left' && (\n      <label className=\"checkbox__label left\" htmlFor=\"remember\">{label}</label>\n      )}\n      <input className=\"checkbox__form\" type=\"checkbox\" name=\"remember\" />\n      {labelSide === 'right' && (\n      <label className=\"checkbox__label right\" htmlFor=\"remember\">{label}</label>\n      )}\n    </div>\n  );\n};\n\nCheckbox.defaultProps = { labelSide: 'right' };\n","import { Button as SButton, ButtonProps } from 'semantic-ui-react';\nimport './button.scss';\n\ntype Props = {\n    // icon?: string\n} & ButtonProps;\n\nexport const Button = (props:Props) => {\n  const {\n    label,\n    onClick,\n    disabled,\n    className,\n    // icon,\n  } = props;\n\n  return (\n    <SButton onClick={onClick} disabled={disabled} className={className}>\n      {label}\n    </SButton>\n  );\n};\n\nButton.defaultProp = { as: 'button' };\n","const colorSet = {\n  black: 'color:#000000',\n  red: 'color:#ff3c00',\n  green: 'color:#90ee90',\n  yellow: 'color:#ffffe0',\n  blue: 'color:#add8e6',\n  white: 'color:#ffffff',\n};\ntype Colors = 'black' | 'red' | 'green' | 'yellow' | 'blue' | 'white';\n/**\n * console.log 用 文字色変更\n *\n *\n * 色を変更したい部分を < > で囲むと色が変わる ( 1行につき1箇所 )\n *\n * 例) console.log(...LogDecorator(`piyoyo<hoge>pipi`, 'blue'));\n *\n * @param str 対象の文字列\n * @param color 変更したい色\n */\nexport const LogDecorator = (str: string, color: Colors) => [str.replace('<', '%c').replace('>', '%c'), colorSet[color], ''];\n","/** 実際にAPIと接続するクラス */\nimport { LogDecorator } from '../utilities/log-decorator';\nimport { ApiBase } from './api-base';\n\nclass ConnectionClass {\n  public async run<ReturnType>(apiBase: ApiBase): Promise<ReturnType> {\n    return fetch(apiBase.createUrl(), apiBase.createRequestInit())\n      .then((res) => this.response(apiBase, res))\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  /** レスポンスのタイプによって処理わけ */\n  public async response(api: ApiBase, response: Response) {\n    const { status } = response;\n    if (status !== 200) {\n      // eslint-disable-next-line no-param-reassign\n      api.contents = 'JSON';\n    }\n\n    switch (api.contents) {\n      case 'JSON':\n        return response.json()\n          .then((json) => {\n            this.log(api, json, response);\n            return json;\n          });\n      case 'BLOB':\n        return response.blob()\n          .then((blob) => {\n            const contentType = response.headers.get('Content-Type') || '';\n            const contentTypeArr = contentType.replace(/\\s/g, '').split(';');\n            const nameItem = contentTypeArr.find((v) => v.indexOf('name') === 0) || '';\n            window.console.log('nameItem', nameItem);\n            if (contentTypeArr.length > 1 && nameItem) {\n              const name = nameItem.split('=').length > 1 ? nameItem.split('=')[1] : '';\n              const file = new File([blob], name);\n              this.log(api, file, response);\n              return { file, status };\n            }\n            const parsedBlob = api.parse(blob);\n            this.log(api, api.parse, response);\n            return { file: parsedBlob, status };\n          });\n      case 'PDF':\n        // eslint-disable-next-line no-case-declarations\n        let filename = '';\n        // eslint-disable-next-line no-case-declarations\n        const disposition = response.headers.get('Content-Disposition');\n        if (disposition && disposition.indexOf('attachment') !== -1) {\n          const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n          const matches = filenameRegex.exec(disposition);\n          if (matches != null && matches[1]) {\n            filename = matches[1].replace(/['\"]/g, '');\n          }\n        }\n        return response.blob()\n          .then((blob) => {\n            if (filename) {\n              const file = new File([blob], filename, { type: 'application/pdf' });\n              this.log(api, file, response);\n              return { file, status };\n            }\n            const parsedBlob = api.parse(blob);\n            this.log(api, api.parse, response);\n            return { file: parsedBlob, status };\n          });\n      default:\n        return response.text()\n          .then(async (text) => {\n            const parsedText = await api.parse(text);\n            this.log(api, parsedText, response);\n            return parsedText;\n          });\n    }\n  }\n\n  public log(api: ApiBase, data: any, res: Response) {\n    const title = `[<${res.status}>] ${api.httpMethod} ${api.url}`;\n    const statusColor = res.status === 200 ? 'blue' : 'red';\n    window.console.groupCollapsed(...LogDecorator(title, statusColor));\n    window.console.log('Url          : ', api.createUrl());\n    window.console.group('Request');\n    window.console.log('Method     : ', api.httpMethod);\n    window.console.log('Contents   : ', api.contents);\n    window.console.log('Header     : ', api.header);\n    if (api.httpMethod === 'GET') {\n      window.console.log('Param      : ', api.param);\n    } else {\n      window.console.log('Body       : ', api.param);\n    }\n    window.console.groupEnd();\n    window.console.group('Response');\n    window.console.log('Body       : ', data);\n    window.console.groupEnd();\n    window.console.groupEnd();\n  }\n}\n\nexport const Connection = new ConnectionClass();\n","import { ContentsType, HttpMethodType, ParamType } from './api.model';\nimport { Connection } from './connection';\n\nconst host = 'https://httpbin.org';\n\nexport class ApiBase<T = {}, J = {}> {\n  public httpMethod: HttpMethodType;\n\n  public contents: ContentsType = 'JSON';\n\n  public url: string;\n\n  public param: ParamType = {};\n\n  public header: { [key: string]: string | undefined } = {};\n\n  public sendParam?: J;\n\n  public host?: string;\n\n  public isBinary?: boolean = false;\n\n  constructor(data: {\n    httpMethod: HttpMethodType;\n    contents?: ContentsType;\n    url: string;\n    param?: ParamType;\n    header?: { [key: string]: string | undefined };\n    sendParam?: J;\n    host?: string;\n    isBinary?: boolean;\n  }) {\n    this.httpMethod = data.httpMethod;\n    this.contents = data.contents || this.contents;\n    this.url = data.url;\n    this.param = data.param || this.param;\n    this.header = data.header || this.header;\n    this.sendParam = data.sendParam;\n    this.host = data.host;\n    this.isBinary = data.isBinary;\n  }\n\n  /** API接続を実行させる */\n  public async run(): Promise<T> {\n    return Connection.run<T>(this)\n      .then((v) => v)\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  /** URLの生成 */\n  public createUrl() {\n    const hostName = this.host || host;\n    const param = this.httpMethod === 'GET' && this.param\n      ? ApiBase.createQueryParam(this.param)\n      : '';\n    return `${hostName}${this.url}${param}`;\n  }\n\n  /** ヘッダーの生成 */\n  public createHeader() {\n    const headers = new Headers();\n    const keys = Object.keys(this.header);\n    const values = Object.values(this.header);\n\n    keys.forEach((key, i) => {\n      if (values[i]) {\n        headers.append(key, String(values[i]));\n      }\n    });\n    return headers;\n  }\n\n  /** ボディの生成 */\n  public createBody() {\n    if (!this.isBinary) return JSON.stringify(this.param);\n\n    const formData = new FormData();\n    const keys = Object.keys(this.param);\n    const values = Object.values(this.param);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (values[i] !== undefined) {\n        formData.append(keys[i], values[i] as string);\n      }\n    }\n    return formData;\n  }\n\n  /** 送信情報 */\n  public createRequestInit() {\n    // eslint-disable-next-line no-undef\n    let requestInit: RequestInit = {};\n    switch (this.httpMethod) {\n      case 'GET':\n        requestInit = {\n          headers: this.createHeader(),\n        };\n        break;\n      case 'POST':\n      case 'DELETE':\n        requestInit = {\n          headers: this.createHeader(),\n          method: this.httpMethod,\n          body: this.createBody(),\n          // mode: 'cors'\n        };\n        break;\n      default:\n        break;\n    }\n    return requestInit;\n  }\n\n  /** パース */\n  public parse(response: any): any {\n    return response;\n  }\n\n  /** 成功判定 */\n  static isSuccess(response: any) {\n    return response !== null && response.status === 200;\n  }\n\n  /** クエリパラメータの生成 */\n  public static createQueryParam(param: ParamType) {\n    let queryParam = '?';\n    const keys = Object.keys(param);\n    const values = Object.values(param);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (values[i] !== undefined) {\n        // console.log('values[i] : ', values[i]);\n        queryParam += `${i ? '&' : ''}${keys[i]}=${values[i]}`;\n      }\n    }\n    return queryParam;\n  }\n}\n","import { ApiBase } from '../../../../service/api-base';\n\nexport type ApiLoginParam = {\n  id: string;\n  pass: string;\n  remember: 0 | 1;\n};\nexport type ApiLoginResponse = ApiLoginParam;\n\nexport class ApiLogin extends ApiBase<ApiLoginResponse> {\n  constructor(param: ApiLoginParam) {\n    super({\n      httpMethod: 'POST',\n      url: '/post',\n      param,\n    });\n  }\n}\n","import actionCreatorFactory from 'typescript-fsa';\nimport { ApiLoginParam } from './login';\n\nexport * from './login';\n\nexport const ActionCreator = actionCreatorFactory('auth/api/login');\n\nexport const apiLogin = ActionCreator<{ param: ApiLoginParam; onError:(str: string[]) => void; }>('');\n","import { ApiBase } from '../../../../service/api-base';\n\nexport type ApiLogoutParam = {};\nexport type ApiLogoutResponse = ApiLogoutParam;\n\nexport class ApiLogout extends ApiBase<ApiLogoutResponse> {\n  constructor(param: ApiLogoutParam) {\n    super({\n      httpMethod: 'POST',\n      url: '/post',\n      param,\n    });\n  }\n}\n","import actionCreatorFactory from 'typescript-fsa';\nimport { ApiLogoutParam } from './logout';\n\nexport * from './logout';\n\nexport const ActionCreator = actionCreatorFactory('auth/api/logout');\n\nexport const apiLogout = ActionCreator<ApiLogoutParam>('');\n","import actionCreatorFactory from 'typescript-fsa';\nimport { apiLogin } from './api/login/index';\nimport { apiLogout } from './api/logout';\n\nexport const ActionCreator = actionCreatorFactory('auth');\n\nexport const AuthActions = {\n  api: {\n    login: apiLogin,\n    logout: apiLogout,\n  },\n};\n","/**\n * 改行コード変換\n * */\nexport const ConvertLineFeed = (props: { text: string[]; className?:string }) => {\n  const { text, className } = props;\n  return (\n    <>\n      {text.map((v, i) => (\n        <div key={i} className={className}>{v}</div>\n      ))}\n    </>\n  );\n};\n\nexport const LineFeedConversion = (text: string[]) => text.map((v, i) => (\n  <div key={i}>{v}</div>\n));\n","import './login.sp.scss';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useCallback, useState } from 'react';\nimport { InputField } from '../../../ui/input-field/input-field';\nimport { Checkbox } from '../../../ui/checkbox/checkbox';\nimport { Button } from '../../../ui/button/button';\nimport { RoutingPath } from '../../../../routes/routing-pass';\nimport { AuthActions } from '../../../../redux/auth/auth.action';\nimport { LineFeedConversion } from '../../../../utilities/line-feed-conversion';\n\nexport const LoginSP = () => {\n  const dispatch = useDispatch();\n\n  /* state */\n  // TODO Debug用\n  const [id, setId] = useState('admin@marietta.co.jp');\n  // const [id, setId] = useState('');\n  const [pass, setPass] = useState('');\n  const [remember, setRemember] = useState<0 | 1>(0);\n  const [errorMessage, setErrorMessage] = useState<string[] | null>(null);\n\n  /* callback */\n  const handleClickLogin = useCallback(() => {\n    dispatch(AuthActions.api.login({\n      param: { id, pass, remember },\n      onError: (str) => setErrorMessage(str),\n    }));\n  }, [id, pass, remember]);\n\n  /* エラーメッセージDOM */\n  const ErrorMessageEle = () => (\n    errorMessage\n      ? (\n        <div className=\"error_wrap\">\n          {LineFeedConversion(errorMessage)}\n        </div>\n      )\n      : <></>\n  );\n\n  return (\n    <div className=\"loginSP\">ログイン画面\n      <div className=\"loginSP__logo\">ロゴスペース</div>\n      <div className=\"loginSP__body\">\n        <div className=\"loginSP__body__inner\">\n          <ErrorMessageEle />\n          <InputField\n            className=\"loginSP__body__inner__input-field\"\n            label=\"メールアドレス\"\n            type=\"email\"\n            isSP\n            value={id}\n            onChange={(e) => setId(e.target.value)}\n            onEnterKeyPress={() => id && pass && handleClickLogin()}\n          />\n          <InputField\n            className=\"loginSP__body__inner__input-field\"\n            label=\"パスワード\"\n            type=\"password\"\n            isSP\n            value={pass}\n            onChange={(e) => setPass(e.target.value)}\n            onEnterKeyPress={() => id && pass && handleClickLogin()}\n          />\n          <Checkbox\n            label=\"ログイン状態を保存する\"\n            value={remember ? 1 : 0}\n            onChange={() => setRemember(remember ? 0 : 1)}\n          />\n          <div>\n            <Link to={RoutingPath.forgetPassword}>パスワードを忘れた方</Link>\n          </div>\n          <Button\n            label=\"ログイン\"\n            type=\"button\"\n            onClick={handleClickLogin}\n            disabled={!(id && pass)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst ActionCreator = actionCreatorFactory('system');\n\nexport const SystemActions = {\n  isLoading: ActionCreator<boolean>('is/loading'),\n  setIsLoading: ActionCreator<boolean>('set/is/loading'),\n};\n","import { Marker } from '@react-google-maps/api';\n\nexport type CustomerMarkerProps = {\n  position: globalThis.google.maps.LatLngLiteral;\n  callback?: () => void;\n  icon?: string;\n};\n\nexport const CustomerMarker = (props: CustomerMarkerProps) => {\n  const { position, callback, icon } = props;\n\n  return (\n    <Marker\n      position={position}\n      onClick={(e) => {\n        e.domEvent.preventDefault();\n        e.domEvent.stopPropagation();\n        if (callback) callback();\n      }}\n      icon={icon ? {\n        url: icon,\n        scaledSize: new globalThis.google.maps.Size(100, 80),\n        // scale: 1,\n        // size: new globalThis.google.maps.Size(22, 22, 'px', px),\n      } : undefined}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/customer_ob.566927d0.svg\";","export default __webpack_public_path__ + \"static/media/customer_uncontracted.7304e67b.svg\";","/* eslint-disable no-irregular-whitespace */\n\nimport customerOb from '../../../../asset/images/customer_ob.svg';\nimport customerUncontracted from '../../../../asset/images/customer_uncontracted.svg';\nimport { CustomerMarkerModel } from './dummy-map.type';\n\nexport type DummyCustomerData = {\n  name: string;\n  furigana: string;\n  postal: string;\n  address: { first: string; second: string; };\n  tel: string;\n  email: string;\n  lineId: string;\n  facebookId: string;\n  salesOffice: string;\n  salesStaff: string;\n  rank: 'A' | 'B' | 'C'\n  img: string;\n  type: 0 | 1 | 2;\n}\n\nexport const dummyCustomerData:DummyCustomerData[] = [\n  {\n    name: '山田太郎',\n    furigana: 'ヤマダタロウ',\n    postal: '120-0043',\n    address: { first: '東京都中央区', second: 'トキワビル111' },\n    tel: '03-1111-1222',\n    email: 'test@test.com',\n    lineId: 'afadfaf',\n    facebookId: 'fafasdfasdfasdfa',\n    salesOffice: '中央支店',\n    salesStaff: '佐藤太郎',\n    rank: 'A',\n    img: '',\n    type: 1,\n  },\n  {\n    name: '佐藤健二',\n    furigana: 'サトウケンジ',\n    postal: '120-0043',\n    address: { first: '東京都中央区', second: 'トキワビル111' },\n    tel: '03-1111-1222',\n    email: 'test@test.com',\n    lineId: 'afadfaf',\n    facebookId: 'fafasdfasdfasdfa',\n    salesOffice: '中央支店',\n    salesStaff: '佐藤太郎',\n    rank: 'A',\n    img: '',\n    type: 2,\n  },\n  // {\n  //   name: '長谷川太郎',\n  //   furigana: 'ハセガワタロウ',\n  //   postal: '120-0043',\n  //   address: { first: '東京都中央区', second: 'トキワビル111' },\n  //   tel: '03-1111-1222',\n  //   email: 'test@test.com',\n  //   lineId: 'afadfaf',\n  //   facebookId: 'fafasdfasdfasdfa',\n  //   salesOffice: '中央支店',\n  //   salesStaff: '佐藤太郎',\n  //   rank: 'B',\n  //   img: '',\n  //   type: 0,\n  // },\n  // {\n  //   name: '桃太郎',\n  //   furigana: 'モモタロウ',\n  //   postal: '120-0043',\n  //   address: { first: '東京都中央区', second: 'トキワビル111' },\n  //   tel: '03-1111-1222',\n  //   email: 'test@test.com',\n  //   lineId: 'afadfaf',\n  //   facebookId: 'fafasdfasdfasdfa',\n  //   salesOffice: '中央支店',\n  //   salesStaff: '佐藤太郎',\n  //   rank: 'C',\n  //   img: '',\n  //   type: 1,\n  // },\n  // {\n  //   name: '太郎',\n  //   furigana: 'タロウ',\n  //   postal: '120-0043',\n  //   address: { first: '東京都中央区', second: 'トキワビル111' },\n  //   tel: '03-1111-1222',\n  //   email: 'test@test.com',\n  //   lineId: 'afadfaf',\n  //   facebookId: 'fafasdfasdfasdfa',\n  //   salesOffice: '中央支店',\n  //   salesStaff: '佐藤太郎',\n  //   rank: 'C',\n  //   img: '',\n  //   type: 2,\n  // },\n];\n\nexport const dummyCustomerMarkers: CustomerMarkerModel[] = [\n  {\n    name: 'marietta',\n    position: { lat: 35.69968628738344, lng: 139.78094970307592 },\n    customer: dummyCustomerData[0],\n    icon: customerOb,\n  },\n  {\n    name: 'sample',\n    position: { lat: 35.69968628738347, lng: 139.77094970307592 },\n    customer: dummyCustomerData[1],\n    icon: customerUncontracted,\n  },\n  // {\n  //   name: 'sample',\n  //   position: { lat: 35.69968628738347, lng: 139.77094970307592 },\n  //   customer: dummyCustomerData[1],\n  //   icon: '',\n  // },\n];\n","import './map-base.scss';\n\nimport {\n  GoogleMap,\n  GoogleMapProps,\n  LoadScript,\n} from '@react-google-maps/api';\nimport { useState } from 'react';\n\n// // TODO ちゃんとしたAPIKEYに変える\nconst apiKey = 'AIzaSyDd4kZOB96LZ9GMxmDUiHcwriQEb1KA9-w';\n\nexport type MapProps = {\n} & GoogleMapProps;\n\nexport const MapBase = (props: MapProps) => {\n  const { center, children } = props;\n\n  const [centerPosition/* , setCenterPosition */] = useState<\n    globalThis.google.maps.LatLng | globalThis.google.maps.LatLngLiteral | undefined\n  >(center);\n\n  window.console.log();\n  return (\n    <LoadScript googleMapsApiKey={apiKey}>\n      <GoogleMap\n        {...props}\n        options={\n          {\n            // mapTypeControl: false,\n            // // streetViewControl: false,\n            // fullscreenControl: false,\n            // zoomControl: false,\n            zoomControlOptions: {\n              position: 7.0,\n            },\n            streetViewControlOptions: {\n              position: 7.0,\n            },\n          }\n        }\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n        }}\n        center={centerPosition}\n        clickableIcons={false}\n        zoom={15}\n      >\n        {children}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/current_location.f5985ac4.svg\";","import { Marker } from '@react-google-maps/api';\nimport currentLocation from '../../../../../../asset/images/current_location.svg';\n\nexport type HumanMarkerProps = {\n  position: globalThis.google.maps.LatLngLiteral;\n};\n\nexport const HumanMarker = (props: HumanMarkerProps) => {\n  const { position } = props;\n\n  return (\n    <Marker\n      position={{ ...position, lng: position.lng + 0.00025 }}\n      icon={{\n        url: currentLocation,\n        scaledSize: new globalThis.google.maps.Size(20, 80),\n      }}\n    />\n  );\n};\n","/* eslint-disable no-trailing-spaces */\n/* eslint-disable no-irregular-whitespace */\nimport './dummy-map.scss';\nimport React, {\n  useCallback, useState,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SystemActions } from '../../../../redux/system/system.action';\nimport { CustomerMarker } from './marker/customer-marker/customer-marker';\nimport { DummyCustomerData, dummyCustomerMarkers } from './dummy-customer-data';\nimport { MapBase } from '../map-base';\nimport { Button } from '../../button/button';\nimport { HumanMarker } from './marker/human-marker/human-marker';\n\nexport const ApiKey = 'AIzaSyDd4kZOB96LZ9GMxmDUiHcwriQEb1KA9-w';\n\nexport const testCenter = {\n  lat: 35.69775,\n  lng: 139.77521,\n};\n\ntype CustomerInfoWindowProps = {\n  customer: DummyCustomerData;\n  callBack:()=>void\n}\n\nconst CustomerInfoWindow = (props:CustomerInfoWindowProps) => {\n  const { customer, callBack } = props;\n  const [detailFlag, setDetailFlag] = useState(false);\n\n  const handleClickArrow = useCallback(\n    () => {\n      if (detailFlag) {\n        setDetailFlag(false);\n        callBack();\n      } else {\n        setDetailFlag(true);\n      }\n    },\n    [detailFlag],\n  );\n\n  const handleClickTel = useCallback(\n    () => {\n      const a = document.createElement('a');\n      a.href = `tel:${customer.tel}`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    },\n    [],\n  );\n\n  const handleClickSupportHistory = useCallback(\n    () => {\n      if (detailFlag) {\n        setDetailFlag(false);\n        callBack();\n      } else {\n        setDetailFlag(true);\n      }\n    },\n    [detailFlag],\n  );\n\n  const handleClickLine = useCallback(\n    () => {\n      // TODO LINE機能\n      const a = document.createElement('a');\n      a.href = 'https://line.me/ja/';\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    },\n    [detailFlag],\n  );\n\n  return (\n    <div>\n      <div onClick={handleClickArrow}>\n        <Button\n          label={!detailFlag ? '⇑' : '⇓'}\n          onClick={handleClickArrow}\n        />\n      </div>\n      {detailFlag ? (\n        <div>\n          <div>\n            <div>\n              {customer.name} {`(${customer.furigana})`}\n            </div>\n            <div>\n              〒{customer.postal}\n            </div>\n          </div>\n          <div>\n            {customer.address.first}\n          </div>\n          <div>\n            {customer.address.second}\n          </div>\n          <div>\n            TEL : {customer.tel}\n          </div>\n          <div>\n            メールアドレス : {customer.email} \n          </div>\n          <div>\n            LINE ID : {customer.lineId} \n          </div>\n          <div>\n            {/* TODO Facebook 機能 */}\n            Facebook ID :\n            <a href=\"https://ja-jp.facebook.com/\" target=\"_blank\" rel=\"noopener noreferrer\">{customer.facebookId}</a>\n          </div>\n          <div>\n            エリア : \n          </div>\n          <div>\n            営業担当 店舗 : {customer.salesOffice} \n          </div>\n          <div>\n            営業担当者 : {customer.salesStaff} \n          </div>\n        </div>\n      )\n        : (\n          <div>\n            <div>\n              <span>\n                {customer.name} {`(${customer.furigana})`}\n              </span>\n              　　\n              <span>\n                {`[${customer.rank}]`}　{`[${!customer.type ? 'OB' : '見込み'}]`}\n              </span>\n            </div>\n            <div>\n              〒{`${customer.postal} ${customer.address.first}`}\n            </div>\n            <div>\n              <span>\n                TEL : {customer.tel}\n              </span>\n              <span>\n                担当者 : {customer.salesStaff} \n              </span>\n            </div>\n          </div>\n        )}\n      <div>\n        <Button label=\"電話\" onClick={handleClickTel} />　\n        <Button label=\"対応登録\" onClick={handleClickSupportHistory} />　\n        <Button label=\"LINE\" onClick={handleClickLine} />\n      </div>\n    </div>\n  );\n};\n\nexport const DummyMap = (props: { type: 0 | 1 | 2; }) => {\n  const { type } = props;\n  const dispatch = useDispatch();\n\n  /* state */\n  const [customer, setCustomer] = useState<DummyCustomerData | null>(null);\n  const [isInfo, setIsInfo] = useState(false);\n\n  const list = !type\n    ? dummyCustomerMarkers\n    : dummyCustomerMarkers.filter((v) => v.customer.type === type);\n\n  return (\n    <>\n      <MapBase\n        center={testCenter}\n        zoom={15}\n        onLoad={() => {\n          dispatch(SystemActions.isLoading(true));\n        }}\n        onTilesLoaded={() => {\n          dispatch(SystemActions.isLoading(false));\n        }}\n        onClick={() => setIsInfo(false)}\n        clickableIcons={false}\n      >\n        <HumanMarker position={testCenter} />\n\n        {/* 顧客のピン */}\n        {list.map((v, i) => (\n          <CustomerMarker\n            key={`customer-marker${i}`}\n            position={v.position}\n            icon={v.icon}\n            callback={() => {\n              setCustomer(v.customer);\n              setIsInfo(true);\n            }}\n          />\n        ))}\n      </MapBase>\n      {isInfo && customer && (\n      <CustomerInfoWindow\n        customer={customer}\n        callBack={() => {}}\n      />\n      )}\n    </>\n  );\n};\n","import { DummyCustomerData } from '../../map/dummy-map/dummy-customer-data';\nimport './customer-card.scss';\n\ntype Props = {\n    customerData: DummyCustomerData,\n    isSP?: boolean\n}\n\nexport const CustomerCard = (props: Props) => {\n  const { customerData, isSP } = props;\n  const baseClassName = 'CustomerCard';\n  const defaultClassName = isSP ? `${baseClassName}-sp` : `${baseClassName}`;\n\n  return (\n    <div className={`${defaultClassName}`}>\n      <p>{customerData.name}</p>\n      <div><span>{customerData.rank}</span></div>\n      <div><span>{customerData.type}</span></div>\n      <p>{`${customerData.address.first}${customerData.address.second}`}</p>\n      <p>TEL：{customerData.tel}</p>\n      <p>担当者：{customerData.salesStaff}</p>\n    </div>\n  );\n};\n\nCustomerCard.defaultProps = { isSP: false };\n","import { CustomerCard } from '../../../../../ui/card/customer-card/customer-card';\nimport { dummyCustomerData } from '../../../../../ui/map/dummy-map/dummy-customer-data';\nimport './customer-list.sp.scss';\n\ntype Props = {\n    type: 0 | 1 | 2 ;\n}\n\nexport const CustomerListSP = (props: Props) => {\n  const { type } = props;\n  const customerList = !type ? dummyCustomerData : dummyCustomerData.filter(\n    (v) => v.type === type,\n  );\n  return (\n    <div className=\"CustomerListSP\">\n      {customerList.map((v, i) => (\n        <div key={`card${i}`}>\n          <CustomerCard customerData={v} isSP />\n        </div>\n      ))}\n    </div>\n  );\n};\n","// import {ApiLogin} from '../../api/auth/api-login';\nimport actionCreatorFactory from 'typescript-fsa';\nimport { DialogProps, DialogBtnProps } from '../../components/dialogs/dialog.type';\n\nconst ActionCreator = actionCreatorFactory('dialog');\n\nexport const DialogActions = {\n  push: ActionCreator<DialogProps>('push'),\n  pushMessage: ActionCreator<{\n    message: string[];\n    btnProps?: DialogBtnProps[]\n    allClear?: boolean;\n      }>('push/message'),\n  pop: ActionCreator('pop'),\n  clear: ActionCreator('clear'),\n  isLoading: ActionCreator<boolean>('is/loading'),\n  setIsLoading: ActionCreator<boolean>('set/is/loading'),\n};\n","import { push } from 'connected-react-router';\nimport {\n  useCallback, useState, useRef, useEffect, RefObject,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RoutingPath } from '../../../../routes/routing-pass';\nimport { Button } from '../../../ui/button/button';\nimport './header.sp.scss';\nimport { UserInfoData } from './header.sp.type';\nimport { AuthActions } from '../../../../redux/auth/auth.action';\nimport { DialogActions } from '../../../../redux/dialog/dialog.action';\n\ntype Props = {\n  userInfo: UserInfoData;\n  headerRef?: RefObject<HTMLElement>\n}\n\nexport const HeaderSP = (props: Props) => {\n  const dispatch = useDispatch();\n  const { userInfo, headerRef } = props;\n\n  /* ref */\n  const menuHeaderEle = useRef<HTMLDivElement>(null);\n\n  /* state */\n  const [isMenuOpened, setIsMenuOpened] = useState<boolean>(false);\n  const [menuHeaderHeight, setMenuHeaderHeight] = useState<number>(0);\n\n  /* callback */\n  const handleClickMenu = useCallback(\n    (routingPath: string) => {\n      dispatch(push(routingPath));\n    },\n    [],\n  );\n\n  const handleClickLogout = useCallback(\n    () => {\n      dispatch(DialogActions.pushMessage({\n        message: ['ログアウトしますか'],\n        btnProps: [\n          {\n            label: 'キャンセル',\n            callback: () => {\n              dispatch(DialogActions.pop());\n            },\n            isCancel: true,\n          },\n          {\n            label: 'OK',\n            callback: () => {\n              dispatch(AuthActions.api.logout({}));\n            },\n            isCancel: true,\n          },\n        ],\n      }));\n    },\n    [],\n  );\n\n  /* effect */\n  useEffect(() => {\n    setMenuHeaderHeight(menuHeaderEle.current?.getBoundingClientRect().height || 0);\n  }, [menuHeaderEle]);\n\n  return (\n    <header\n      className=\"headerSP\"\n      id=\"headerSP\"\n      ref={headerRef}\n    >\n      <div\n        className=\"headerSP__menu-btn\"\n        onClick={() => setIsMenuOpened(!isMenuOpened)}\n      >\n        <i className=\"fas fa-bars\" />\n      </div>\n      <div className={`headerSP__menu-content ${isMenuOpened ? 'opened' : ''}`}>\n        <div className=\"headerSP__menu-content__header\" ref={menuHeaderEle}>\n          <span className=\"headerSP__menu-content__header__greeting\">\n            ようこそ！○○店 ○○さん\n          </span>\n          <div\n            className=\"headerSP__menu-content__header__close\"\n            onClick={() => setIsMenuOpened(false)}\n          >\n            <i className=\"fas fa-times\" />\n          </div>\n        </div>\n\n        <div\n          className=\"headerSP__menu-content__body\"\n          style={{\n            top: `${menuHeaderHeight}px`,\n            height: `calc(100% - ${menuHeaderHeight}px)`,\n          }}\n        >\n          <div className=\"headerSP__menu-content__body__main-menu\">\n            <div className=\"headerSP__menu-content__body__main-menu__btn customer-list\">\n              <Button label=\"顧客一覧\" onClick={() => handleClickMenu(RoutingPath.customer)} />\n            </div>\n            <div className=\"headerSP__menu-content__body__main-menu__btn customer-regist\">\n              <Button label=\"顧客登録\" onClick={() => handleClickMenu(RoutingPath.customer)} />\n            </div>\n            <div className=\"headerSP__menu-content__body__main-menu__btn customer-search\">\n              <Button label=\"顧客検索\" onClick={() => handleClickMenu(RoutingPath.customer)} />\n            </div>\n            <div className=\"headerSP__menu-content__body__main-menu__btn file\">\n              <Button label=\"ファイル\" onClick={() => handleClickMenu(RoutingPath.file)} />\n            </div>\n            <div className=\"headerSP__menu-content__body__main-menu__btn support-regist\">\n              <Button label=\"対応登録\" onClick={() => handleClickMenu(RoutingPath.supportHistory)} />\n            </div>\n          </div>\n          <div className=\"headerSP__menu-content__body__menu-list\">\n            <div className=\"menu\">\n              <div className=\"menu__category\">顧客</div>\n              <div\n                className=\"menu__item\"\n                onClick={() => handleClickMenu(RoutingPath.customer)}\n              >\n                顧客一覧\n              </div>\n              <div\n                className=\"menu__item\"\n                onClick={() => handleClickMenu(RoutingPath.customer)}\n              >\n                顧客登録\n              </div>\n            </div>\n            <div className=\"menu\">\n              <div className=\"menu__category\">案件</div>\n              <div\n                className=\"menu__item\"\n                onClick={() => handleClickMenu(RoutingPath.proposition)}\n              >\n                案件一覧\n              </div>\n              <div\n                className=\"menu__item\"\n                onClick={() => handleClickMenu(RoutingPath.proposition)}\n              >\n                案件登録\n              </div>\n            </div>\n            <div className=\"menu\">\n              <div className=\"menu__category\">見積</div>\n              <div\n                className=\"menu__item\"\n                onClick={() => handleClickMenu(RoutingPath.estimate)}\n              >\n                見積一覧\n              </div>\n              <div\n                className=\"menu__item\"\n                onClick={() => handleClickMenu(RoutingPath.estimate)}\n              >\n                見積登録\n              </div>\n            </div>\n            <div className=\"menu\">\n              <div className=\"menu__category\">メンテナンス</div>\n              <div\n                className=\"menu__item\"\n                onClick={() => handleClickMenu(RoutingPath.maintenance)}\n              >\n                メンテナンス一覧\n              </div>\n              <div\n                className=\"menu__item\"\n                onClick={() => handleClickMenu(RoutingPath.maintenance)}\n              >\n                メンテナンス登録\n              </div>\n            </div>\n            <div className=\"menu\">\n              <div className=\"menu__category\">ファイル</div>\n              <div\n                className=\"menu__item\"\n                onClick={() => handleClickMenu(RoutingPath.file)}\n              >\n                ファイル一覧\n              </div>\n              <div\n                className=\"menu__item \"\n                onClick={() => handleClickMenu(RoutingPath.file)}\n              >\n                ファイル登録\n              </div>\n            </div>\n            <div className=\"menu\">\n              <div className=\"menu__category\">対応履歴</div>\n              <div\n                className=\"menu__item \"\n                onClick={() => handleClickMenu(RoutingPath.supportHistory)}\n              >\n                対応履歴一覧\n              </div>\n              <div\n                className=\"menu__item \"\n                onClick={() => handleClickMenu(RoutingPath.supportHistory)}\n              >\n                対応履歴登録\n              </div>\n            </div>\n            <div className=\"menu\">\n              <div className=\"menu__category\">ユーザー情報</div>\n              <div className=\"menu__user-info\">\n                <div className=\"menu__user-info__item\">社員CD：{userInfo.employeeCD}</div>\n                <div className=\"menu__user-info__item\">店舗：{userInfo.storeName}</div>\n                <div className=\"menu__user-info__item\">\n                  名称：{userInfo.userName}（略称：{userInfo.userAltName && userInfo.userAltName}）\n                </div>\n                <div className=\"menu__user-info__item\">フリガナ：{userInfo.userFurigana}</div>\n                <div className=\"menu__user-info__item\">役職：{userInfo.jobPost}</div>\n                <div className=\"menu__user-info__item\">メールアドレス：{userInfo.email}</div>\n                <Button label=\"パスワード変更\" className=\"menu__user-info__remake-pass\" />\n              </div>\n            </div>\n            <div className=\"menu\">\n              <div\n                className=\"menu__item logout\"\n                onClick={handleClickLogout}\n              >\n                ログアウト\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import './base.page.sp.scss';\nimport {\n  ReactElement, useEffect, useRef, useState,\n} from 'react';\nimport { HeaderSP } from '../layout/header/header.sp';\n\nexport type BaseProps = {\n    className?: string,\n    children?: ReactElement | ReactElement[],\n};\n\nexport const BasePageSP = (props: BaseProps) => {\n  const headerEle = useRef<HTMLElement>(null);\n  const [headerHeight, setHeaderHeight] = useState<number>(0);\n  const {\n    className,\n    children,\n  } = props;\n\n  /* effect */\n  useEffect(() => {\n    setHeaderHeight(headerEle.current?.getBoundingClientRect().height || 0);\n  }, [headerEle]);\n\n  return (\n    <div className={className}>\n      {/* - header - */}\n      <HeaderSP\n        userInfo={{\n          employeeCD: '9999',\n          storeName: 'ABC',\n          userName: 'デモ太郎',\n          userAltName: 'デモ',\n          userFurigana: 'デモタロウ',\n          jobPost: '社員',\n          email: 'demo-taro@demo.co.jp',\n        }}\n        headerRef={headerEle}\n      />\n\n      {/* - body - */}\n      <div\n        className=\"PageBaseSP__body\"\n        style={{ height: `calc(100% - ${headerHeight}px)` }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Button } from '../../../ui/button/button';\nimport { DummyMap } from '../../../ui/map/dummy-map/dummy-map';\nimport { CustomerListSP } from '../../layout/body/list/customer-list/customer-list.sp';\nimport { BasePageSP } from '../base.page.sp';\nimport './customer.sp.scss';\n\nexport const CustomerSP = () => {\n  const [showType, setShowType] = useState<'map' | 'list'>('map');\n  const [customerShowType, setCustomerShowType] = useState<0 | 1 |2>(0);\n\n  const [footerHeight, setFooterHeight] = useState<number>(0);\n  const footerEle = useRef<HTMLElement>(null);\n\n  /* effect */\n  useEffect(() => {\n    setFooterHeight(footerEle.current?.getBoundingClientRect().height || 0);\n  }, [footerEle]);\n\n  return (\n    <BasePageSP className=\"CustomerSP\">\n      <div\n        className=\"MapSP\"\n        style={{ height: `calc(100% - ${footerHeight}px)` }}\n      >\n        <div\n          className=\"MapSP__body\"\n        >\n          <div className=\"MapSP__body__map\" />\n          {showType === 'map'\n            ? <DummyMap type={customerShowType} />\n            : <CustomerListSP type={customerShowType} />}\n          <Button label=\"住所検索\" className=\"search-address\" onClick={() => {}} />\n          <Button label=\"表示切替え\" className=\"change-display\" onClick={() => setShowType(showType === 'map' ? 'list' : 'map')} />\n        </div>\n\n        <footer className=\"MapSP__footer\" ref={footerEle}>\n          <Button label=\"すべて\" className=\"btn-md\" onClick={() => setCustomerShowType(0)} />\n          <Button label=\"OBのみ\" className=\"btn-md\" onClick={() => setCustomerShowType(1)} />\n          <Button label=\"見込みのみ\" className=\"btn-md\" onClick={() => setCustomerShowType(2)} />\n          <Button label=\"詳細検索\" className=\"btn-lg\" onClick={() => {}} />\n          <Button label=\"顧客新規登録\" className=\"btn-lg\" onClick={() => {}} />\n        </footer>\n      </div>\n    </BasePageSP>\n  );\n};\n","import './customer-detail.sp.scss';\n\nexport const CustomerDetailSP = () => (\n  <div>\n    顧客詳細\n  </div>\n);\n","import { useState } from 'react';\nimport { CustomerListSP } from '../../layout/body/list/customer-list/customer-list.sp';\nimport './proposition.sp.scss';\nimport { BasePageSP } from '../base.page.sp';\n\nexport const PropositionSP = () => {\n  const [customerShowType] = useState<0 | 1 |2>(0);\n  return (\n\n    <BasePageSP>\n      <div>案件一覧</div>\n      <CustomerListSP type={customerShowType} />\n    </BasePageSP>\n  );\n};\n","import './proposition-detail.sp.scss';\n\nexport const PropositionDetailSP = () => (\n  <div>\n    案件\n  </div>\n);\n","import { useState } from 'react';\nimport { CustomerListSP } from '../../layout/body/list/customer-list/customer-list.sp';\nimport { BasePageSP } from '../base.page.sp';\nimport './estimate.sp.scss';\n\nexport const EstimateSP = () => {\n  const [customerShowType] = useState<0 | 1 |2>(0);\n\n  return (\n    <BasePageSP>\n      <div>見積一覧</div>\n      <CustomerListSP type={customerShowType} />\n    </BasePageSP>\n  );\n};\n","import './estimate-detail.sp.scss';\n\nexport const EstimateDetailSP = () => (\n  <div>\n    案件\n  </div>\n);\n","import './order.sp.scss';\nimport { BasePageSP } from '../base.page.sp';\n\nexport const OrderSP = () => (\n  <BasePageSP>\n    <div>受注</div>\n  </BasePageSP>\n);\n","import { useState } from 'react';\nimport { CustomerListSP } from '../../layout/body/list/customer-list/customer-list.sp';\nimport './maintenance.sp.scss';\nimport { BasePageSP } from '../base.page.sp';\n\nexport const MaintenanceSP = () => {\n  const [customerShowType] = useState<0 | 1 |2>(0);\n\n  return (\n\n    <BasePageSP>\n      <div>メンテナンス一覧</div>\n      <CustomerListSP type={customerShowType} />\n    </BasePageSP>\n  );\n};\n","import './maintenance-detail.sp.scss';\n\nexport const MaintenanceDetailSP = () => (\n  <div>\n    メンテナンス詳細？登録/編集ダイアログ？\n  </div>\n);\n","import { useState } from 'react';\nimport { CustomerListSP } from '../../layout/body/list/customer-list/customer-list.sp';\nimport './file.sp.scss';\nimport { BasePageSP } from '../base.page.sp';\n\nexport const FileSP = () => {\n  const [customerShowType] = useState<0 | 1 |2>(0);\n  return (\n    <BasePageSP>\n      <div>ファイル一覧</div>\n      <CustomerListSP type={customerShowType} />\n    </BasePageSP>\n  );\n};\n","import { useState } from 'react';\nimport { CustomerListSP } from '../../layout/body/list/customer-list/customer-list.sp';\nimport './support-history.sp.scss';\nimport { BasePageSP } from '../base.page.sp';\n\nexport const SupportHistorySP = () => {\n  const [customerShowType] = useState<0 | 1 |2>(0);\n\n  return (\n    <BasePageSP>\n      <div>対応履歴一覧</div>\n      <CustomerListSP type={customerShowType} />\n    </BasePageSP>\n  );\n};\n","import './forget-password.sp.scss';\nimport { Link } from 'react-router-dom';\nimport { InputField } from '../../../../ui/input-field/input-field';\nimport { RoutingPath } from '../../../../../routes/routing-pass';\nimport { Button } from '../../../../ui/button/button';\n\nexport const ForgetPasswordSP = () => (\n  <div className=\"forgetPasswordSP\">\n    <div className=\"forgetPasswordSP__logo\">ロゴスペース</div>\n    <div className=\"forgetPasswordSP__title\">パスワード再発行</div>\n    <div className=\"forgetPasswordSP__body\">\n      <div className=\"forgetPasswordSP__body__inner\">\n        <InputField\n          className=\"forgetPasswordSP__body__inner__input-field\"\n          label=\"メールアドレス\"\n          type=\"email\"\n          isSP\n        />\n        <div>ご登録いただいたメールアドレスを入力してください。<br />パスワードリセットメールを送信します。</div>\n        <Button label=\"送信\" type=\"submit\" onClick={() => {}} />\n        <div>\n          <Link to={RoutingPath.login}>ログイン画面に戻る</Link>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import { ApiBase } from '../../../../service/api-base';\nimport { RequestBaseCollection } from '../../../../service/api.collection';\nimport { RequestBaseParam } from '../../../../service/api.model';\n\nexport class ApiTestStr<T = {}> extends ApiBase<T> {\n  constructor(param: RequestBaseParam & { url: string; }) {\n    super({\n      ...RequestBaseCollection(),\n      ...param,\n      host: 'https://httpbin.org',\n    });\n  }\n}\n","import lodash from 'lodash';\nimport { RequestBaseParam } from './api.model';\n\nexport const RequestBaseCollection:()=> RequestBaseParam = () => (\n  lodash.cloneDeep(\n    {\n      httpMethod: 'GET',\n      param: {},\n    },\n  ));\n","import { ApiTestStr } from '.';\n\nexport type ApiTestStrGetResponse = {\n  str: string;\n};\n\nexport type ApiTestStrGetParam = {\n  str: string;\n};\n\nexport class ApiTestStrGet extends ApiTestStr<ApiTestStrGetResponse> {\n  constructor(param:ApiTestStrGetParam) {\n    super({\n      httpMethod: 'GET',\n      url: '/get',\n      param,\n    });\n  }\n}\n","import { ApiTestStr } from '.';\n\nexport type ApiTestStrPostResponse = {\n  str: string;\n};\n\nexport type ApiTestStrPostParam = {\n  str: string;\n};\n\nexport class ApiTestStrPost extends ApiTestStr<ApiTestStrPostResponse> {\n  constructor(param:ApiTestStrPostParam) {\n    super({\n      httpMethod: 'POST',\n      url: '/post',\n      param,\n    });\n  }\n}\n","import { ApiTestStr } from '.';\n\nexport class ApiTestStrDelete extends ApiTestStr {\n  constructor() {\n    super({\n      httpMethod: 'DELETE',\n      url: '/delete',\n    });\n  }\n}\n","import actionCreatorFactory from 'typescript-fsa';\n\nexport * from './api-test-str';\nexport * from './get';\nexport * from './post';\nexport * from './delete';\n\nexport const ActionCreator = actionCreatorFactory('test/api/str');\n\nexport const apiStr = {\n  get: ActionCreator<string>('get'),\n  post: ActionCreator<string>('post'),\n  delete: ActionCreator<string>('delete'),\n};\n","import actionCreatorFactory from 'typescript-fsa';\nimport { apiStr } from './api/str/index';\n\nexport const ActionCreator = actionCreatorFactory('test');\n\nexport const TestActions = {\n  api: {\n    str: apiStr,\n  },\n  testAlert: ActionCreator<string>('test/alert'),\n  setTestStr: ActionCreator<string>('set/test'),\n};\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport './test-page.sp.scss';\nimport { RoutingPath } from '../../../../routes/routing-pass';\nimport { TestActions } from '../../../../redux/test/test.action';\n\nexport const TestPageSP = () => {\n  const dispatch = useDispatch();\n\n  const handleClick = useCallback(\n    () => {\n      dispatch(push(`${RoutingPath.testDetail}/1`));\n    },\n    [dispatch],\n  );\n  const click2BasePage = useCallback(\n    () => {\n      dispatch(push(RoutingPath.customer));\n    },\n    [dispatch],\n  );\n\n  const handleClickReduxTestAlert = useCallback(\n    () => {\n      dispatch(TestActions.testAlert('アラート テスト 成功'));\n    },\n    [dispatch],\n  );\n\n  const handleClickReduxTestApi = useCallback(\n    (type: 'POST' | 'GET' | 'DELETE') => {\n      const action = TestActions.api.str;\n      const str = `${type} API`;\n      switch (type) {\n        case 'GET':\n          dispatch(action.get(str));\n          break;\n        case 'POST':\n          dispatch(action.post(str));\n          break;\n        case 'DELETE':\n          dispatch(action.delete(str));\n          break;\n        default:\n          break;\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <div>\n      <h1>Test Page</h1>\n      <div>\n        API TEST：\n        <button onClick={() => handleClickReduxTestApi('GET')}>GET</button>\n        <button onClick={() => handleClickReduxTestApi('POST')}>POST</button>\n        <button onClick={() => handleClickReduxTestApi('DELETE')}>DELETE</button>\n      </div>\n      <div>\n        <button onClick={handleClickReduxTestAlert}>Redux Test Alert</button>\n      </div>\n      <div>\n        <button onClick={handleClick}>テスト2へ</button>\n      </div>\n      <div>\n        <button onClick={click2BasePage}>BasePageへ</button>\n      </div>\n    </div>\n  );\n};\n","import { Redirect, Route, Switch } from 'react-router-dom';\nimport { RoutingPath } from './routing-pass';\nimport { TestDetailSP } from '../components/sp/pages/test-detail/test-detail.sp';\nimport { LoginSP } from '../components/sp/pages/login/login.sp';\nimport { CustomerSP } from '../components/sp/pages/customer/customer.sp';\nimport { CustomerDetailSP } from '../components/sp/pages/customer-detail/customer-detail.sp';\nimport { PropositionSP } from '../components/sp/pages/proposition/proposition.sp';\nimport { PropositionDetailSP } from '../components/sp/pages/proposition-detail/proposition-detail.sp';\nimport { EstimateSP } from '../components/sp/pages/estimate/estimate.sp';\nimport { EstimateDetailSP } from '../components/sp/pages/estimate-detail/estimate-detail.sp';\nimport { OrderSP } from '../components/sp/pages/order/order.sp';\nimport { MaintenanceSP } from '../components/sp/pages/maintenance/maintenance.sp';\nimport { MaintenanceDetailSP } from '../components/sp/pages/maintenance-detail/maintenance-detail.sp';\nimport { FileSP } from '../components/sp/pages/file/file.sp';\nimport { SupportHistorySP } from '../components/sp/pages/support-history/support-history.sp';\nimport { ForgetPasswordSP } from '../components/sp/pages/password/forget-password/forget-password.sp';\nimport { TestPageSP } from '../components/sp/pages/test-page/test-page.sp';\n\nexport const Routes = () => (\n  <Switch>\n    <Route exact path={RoutingPath.testPage} component={TestPageSP} />\n    <Route exact path={`${RoutingPath.testDetail}/:id`} component={TestDetailSP} />\n    <Route exact path={RoutingPath.login} component={LoginSP} />\n    <Route exact path={RoutingPath.forgetPassword} component={ForgetPasswordSP} />\n    <Route exact path={RoutingPath.customer} component={CustomerSP} />\n    <Route exact path={RoutingPath.customerDetail} component={CustomerDetailSP} />\n    <Route exact path={RoutingPath.proposition} component={PropositionSP} />\n    <Route exact path={RoutingPath.propositionDetail} component={PropositionDetailSP} />\n    <Route exact path={RoutingPath.estimate} component={EstimateSP} />\n    <Route exact path={RoutingPath.estimateDetail} component={EstimateDetailSP} />\n    <Route exact path={RoutingPath.order} component={OrderSP} />\n    <Route exact path={RoutingPath.maintenance} component={MaintenanceSP} />\n    <Route exact path={RoutingPath.maintenanceDetail} component={MaintenanceDetailSP} />\n    <Route exact path={RoutingPath.file} component={FileSP} />\n    <Route exact path={RoutingPath.supportHistory} component={SupportHistorySP} />\n    <Redirect path=\"/\" to={RoutingPath.testPage} />\n  </Switch>\n);\n","import { useSelector } from 'react-redux';\nimport './loading.scss';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport { State } from '../../../redux/root.reducer';\n\nexport const Loading = () => {\n  const isLoading = useSelector((state: State) => state.system.isLoading);\n  return isLoading ? (\n    <Dimmer active>\n      <Loader size=\"massive\" inverted content=\"Loading\" />\n    </Dimmer>\n  ) : (\n    <></>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Modal } from 'semantic-ui-react';\nimport { State } from '../../redux/root.reducer';\nimport { ConvertLineFeed } from '../../utilities/line-feed-conversion';\nimport { Button } from '../ui/button/button';\nimport { DialogProps } from './dialog.type';\n\nexport const BaseDialog = (props: DialogProps) => {\n  const {\n    title,\n    element,\n    className,\n    messageType,\n  } = props;\n\n  return (\n    <Modal\n      open\n      className={className}\n    >\n      <Modal.Header>{title || ''}</Modal.Header>\n      <Modal.Content>\n        {messageType ? (\n          <>\n            <div>\n              <ConvertLineFeed className=\"\" text={messageType.messages || []} />\n            </div>\n            <div>\n              {messageType.btnProps?.map((v, i) => (\n                <Button\n                  key={`btn${i}`}\n                  label={v.label || 'OK'}\n                  onClick={v.callback}\n                  className={v.isCancel ? 'cancel_btn' : ''}\n                />\n                // TODO 後でSTYLE\n              ))}\n            </div>\n          </>\n        ) : element}\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport const Dialog = () => {\n  const dialogs = useSelector((state: State) => state.dialog.dialogs);\n  return (\n    <>\n      {dialogs.map((v, i) => (\n        <div key={`dialog${i}`}>\n          <BaseDialog\n            title={v.title}\n            messageType={v.messageType}\n            bodyEle={v.element}\n            message={v.messageType?.messages}\n            btnProps={v.messageType?.btnProps}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n","import './App.scss';\nimport '../node_modules/semantic-ui-css/semantic.min.css';\nimport { Routes } from './routes/routes';\nimport { Loading } from './components/ui/loading/loading';\nimport { Dialog } from './components/dialogs/dialog';\n\nconst App = () => (\n  <div className=\"App\">\n    <Routes />\n    <Loading />\n    <Dialog />\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport { TestActions } from './test.action';\n\nexport type TestState = {\n  testStr: string;\n};\n\nconst initialState: TestState = { testStr: '' };\n\nexport const TestReducer = reducerWithInitialState<TestState>(\n  initialState,\n).case(TestActions.setTestStr, (state, payload) => ({\n  ...state,\n  testStr: payload,\n}));\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport { SystemActions } from './system.action';\n\nexport type SystemState = {\n  isLoading: boolean;\n};\n\nconst initialState: SystemState = {\n  isLoading: false,\n};\n\nexport const SystemReducer = reducerWithInitialState<SystemState>(initialState)\n  .case(SystemActions.setIsLoading, (state, payload) => (\n    {\n      ...state,\n      isLoading: payload,\n    }\n  ));\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport * as lodash from 'lodash';\nimport { DialogActions } from './dialog.action';\nimport { DialogProps } from '../../components/dialogs/dialog.type';\n\nexport type DialogState = { dialogs: DialogProps[]};\n\nconst initialState: DialogState = { dialogs: [] };\n\nexport const DialogReducer = reducerWithInitialState<DialogState>(initialState)\n  .case(DialogActions.push, (state, payload) => ({\n    ...state,\n    dialogs: [...state.dialogs, lodash.cloneDeep(payload)],\n  }))\n  .case(DialogActions.pop, (state) => {\n    const { dialogs } = state;\n    const arr = lodash.cloneDeep(dialogs);\n    if (state.dialogs.length > 0) {\n      arr.splice(state.dialogs.length - 1, 1);\n    }\n    return {\n      ...state,\n      dialogs: arr,\n    };\n  })\n  .case(DialogActions.clear, (state) => ({\n    ...state,\n    dialogs: [],\n  }))\n  .default((state) => state);\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { ResType } from '../../service/api.model';\nimport { AuthActions } from './auth.action';\nimport { RoutingPath } from '../../routes/routing-pass';\nimport { ApiLogin, ApiLoginResponse } from './api/login';\nimport { SystemActions } from '../system/system.action';\nimport { ApiLogout, ApiLogoutResponse } from './api/logout/logout';\nimport { DialogActions } from '../dialog/dialog.action';\n\nfunction* tryApiLogin(action: ReturnType<typeof AuthActions.api.login>) {\n  yield put(SystemActions.isLoading(true));\n  const { param, onError } = action.payload;\n  const request = new ApiLogin(param);\n  try {\n    const result: ResType<ApiLoginResponse> = yield request.run();\n\n    if (result.json) {\n      const { id, pass } = result.json;\n      if (\n        id === 'admin@marietta.co.jp'\n        && pass === '1234'\n      ) {\n        yield put(push(RoutingPath.customer));\n      } else {\n        onError(['IDまたはパスワードが正しくありません']);\n      }\n    } else {\n      throw new Error();\n    }\n  } catch (e) {\n    window.console.log(e);\n  }\n  yield put(SystemActions.isLoading(false));\n}\n\nfunction* tryApiLogout() {\n  const request = new ApiLogout({});\n  try {\n    const result: ResType<ApiLogoutResponse> = yield request.run();\n    window.console.log('ログアウト API : ', result);\n    yield put(push(RoutingPath.login));\n    yield put(DialogActions.pop());\n  } catch (e) {\n    window.console.log(e);\n  }\n}\n\nexport function* AuthSaga() {\n  yield takeEvery(AuthActions.api.login, tryApiLogin);\n  yield takeEvery(AuthActions.api.logout, tryApiLogout);\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { Store } from '../store';\nimport { DialogActions } from './dialog.action';\n\nfunction* tryPushMessage(action: ReturnType<typeof DialogActions.pushMessage>) {\n  const {\n    allClear, message, btnProps,\n  } = action.payload;\n\n  if (allClear) {\n    yield put(DialogActions.clear());\n  }\n\n  yield put(\n    DialogActions.push({\n      title: '',\n      messageType: {\n        messages: message,\n        btnProps: btnProps || [{\n          label: 'OK',\n          callback: () => Store.dispatch(DialogActions.pop()),\n        }],\n      },\n    }),\n  );\n}\n\nexport function* DialogSaga() {\n  yield takeEvery(DialogActions.pushMessage, tryPushMessage);\n}\n","import { delay, put, takeEvery } from 'redux-saga/effects';\nimport { SystemActions } from './system.action';\n\nfunction* tryLoading(action: ReturnType<typeof SystemActions.isLoading>) {\n  const isLoading = action.payload;\n  if (!isLoading) {\n    yield delay(200);\n    yield put(SystemActions.setIsLoading(false));\n  } else {\n    yield put(SystemActions.setIsLoading(true));\n  }\n}\n\nexport function* SystemSaga() {\n  yield takeEvery(SystemActions.isLoading, tryLoading);\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { TestActions } from './test.action';\nimport { ResType } from '../../service/api.model';\nimport {\n  ApiTestStrGet, ApiTestStrGetResponse, ApiTestStrPost, ApiTestStrPostResponse, ApiTestStrDelete,\n} from './api/str';\n\nconst { str } = TestActions.api;\n\nfunction* tryTestAlert(action: ReturnType<typeof TestActions.testAlert>) {\n  // eslint-disable-next-line no-alert\n  yield alert(action.payload);\n  yield put(TestActions.setTestStr('Redux アラートのテスト'));\n}\n\nfunction* tryStrApiGet(action: ReturnType<typeof str.get>) {\n  const request = new ApiTestStrGet({ str: action.payload });\n  try {\n    const result: ResType<ApiTestStrGetResponse> = yield request.run();\n    // eslint-disable-next-line no-alert\n    yield alert(result.args.str);\n  } catch (e) {\n    window.console.log(e);\n  }\n}\n\nfunction* tryStrApiPost(action: ReturnType<typeof str.post>) {\n  const request = new ApiTestStrPost({ str: action.payload });\n  try {\n    const result:ResType<ApiTestStrPostResponse> = yield request.run();\n    // eslint-disable-next-line no-alert\n    yield alert(result.json.str);\n  } catch (e) {\n    window.console.log(e);\n  }\n}\n\nfunction* tryStrApiDelete() {\n  const request = new ApiTestStrDelete();\n  try {\n    const result:{} = yield request.run();\n    window.console.log(result);\n    // eslint-disable-next-line no-alert\n    yield alert('デリート成功');\n  } catch (e) {\n    window.console.log(e);\n  }\n}\n\nexport function* TestSaga() {\n  yield takeEvery(str.get, tryStrApiGet);\n  yield takeEvery(str.post, tryStrApiPost);\n  yield takeEvery(str.delete, tryStrApiDelete);\n\n  yield takeEvery(TestActions.testAlert, tryTestAlert);\n}\n","import { all, fork } from 'redux-saga/effects';\nimport { AuthSaga } from './auth/auth.saga';\nimport { DialogSaga } from './dialog/dialog.saga';\nimport { SystemSaga } from './system/system.saga';\nimport { TestSaga } from './test/test.saga';\n\nexport const RootSaga = function* root() {\n  yield all([\n    fork(TestSaga),\n    fork(AuthSaga),\n    fork(DialogSaga),\n    fork(SystemSaga),\n  ]);\n};\n","import { combineReducers } from 'redux';\nimport { connectRouter, RouterState } from 'connected-react-router';\nimport { History } from 'history';\nimport { TestState, TestReducer } from './test/test.reducer';\nimport { SystemState, SystemReducer } from './system/system.reducer';\nimport { DialogReducer, DialogState } from './dialog/dialog.reducer';\n\nexport type State = {\n  router: RouterState;\n  test: TestState;\n  dialog: DialogState;\n  system: SystemState;\n};\n\nexport const RootReducer = (history: History) => combineReducers<State>({\n  router: connectRouter(history),\n  test: TestReducer,\n  dialog: DialogReducer,\n  system: SystemReducer,\n});\n","import { createHashHistory } from 'history';\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { createLogger } from 'redux-logger';\nimport { RootReducer, State } from './root.reducer';\nimport { RootSaga } from './root.saga';\n\n// history\nexport const history = createHashHistory();\n\n// redux-saga\nconst sagaMiddleWare = createSagaMiddleware();\n\n// redux-persist\nconst persistedReducer = persistReducer({\n  key: 'auth',\n  whitelist: ['auth'],\n  // blacklist: [\"user\", \"event\"],5\n  storage,\n  debug: true,\n}, RootReducer(history));\n\n// redux-logger\nconst reduxLogger = createLogger({\n  collapsed: true,\n  diff: true,\n  duration: true,\n});\n\n// redux-loggerの切り替え\nconst isLogger = false;\n\n// ストア生成\nexport const ConfigureStore = (preloadState?: State) => {\n  // const middleware = [sagaMiddleWare, routerMiddleware(history)];\n  const middleware = isLogger\n    ? [reduxLogger, sagaMiddleWare, routerMiddleware(history)]\n    : [sagaMiddleWare, routerMiddleware(history)];\n  const middlewareEnhancer = applyMiddleware(...middleware);\n  const store = createStore(\n    persistedReducer,\n    preloadState as any,\n    middlewareEnhancer,\n  );\n  const persist = persistStore(store);\n  sagaMiddleWare.run(RootSaga);\n  return { store, persist };\n};\n\nconst obj = ConfigureStore();\nexport const Store = obj.store;\nexport const Persist = obj.persist;\n","import { render } from 'react-dom';\nimport './index.css';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { history, Store } from './redux/store';\n\nrender(\n  <Provider store={Store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}